{"version":3,"sources":["webpack://modules/../src/utils.ts","webpack://modules/../src/Chart/extendData.ts","webpack://modules/../src/Label.tsx","webpack://modules/../src/Chart/renderLabels.tsx","webpack://modules/../node_modules/svg-partial-circle/index.js","webpack://modules/../src/Path.tsx","webpack://modules/../src/Chart/renderSegments.tsx","webpack://modules/../src/Chart/Chart.tsx"],"names":["degrees","Math","value","percentage","startAngle","lengthAngle","angleRadians","degreesToRadians","dx","distance","dy","prop","sum","i","data","totalAngle","totalValue","paddingAngle","chartStartAngle","total","sumValues","normalizedTotalAngle","valueBetween","numberOfPaddings","singlePaddingDegrees","degreesTakenByPadding","degreesTakenByPaths","lastSegmentEnd","extendedData","dataEntry","valueInPercentage","extractPercentage","dataIndex","props","divisor","number","Number","labelPosition","lineWidth","labelHorizontalShift","round","innerRadius","label","renderLabel","labelProps","React","segmentsShift","functionProp","distanceFromCenter","shiftVectorAlongAngle","bisectorAngle","labelRenderProps","x","y","textAnchor","evaluateTextAnchorPosition","style","renderLabelElement","partialCircle","length","end","fromX","r","fromY","toX","toY","large","sweep","module","patchedLengthAngle","command","cx","cy","radius","shift","reveal","rounded","title","pathRadius","pathCommands","makePathCommands","isNumber","pathLength","strokeDasharray","strokeDashoffset","undefined","transition","customStyle","eventHandler","revealOverride","getRevealValue","paths","segmentsStyle","Object","combineSegmentTransitionsStyle","makeEventHandler","background","defaultProps","animationDuration","animationEasing","center","viewBoxSize","useState","setRevealOverride","useEffect","startInitialAnimation","animationTimerId","setTimeout","animationRAFId","requestAnimationFrame","clearTimeout","cancelAnimationFrame","extendData","renderSegments","renderLabels","ReactMinimalPieChart"],"mappings":"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","file":"vendors-node_modules_react-minimal-pie-chart_dist_index_js.js","sourcesContent":["export function degreesToRadians(degrees: number) {\n  return (degrees * Math.PI) / 180;\n}\n\nexport function valueBetween(value: number, min: number, max: number) {\n  if (value > max) return max;\n  if (value < min) return min;\n  return value;\n}\n\nexport function extractPercentage(value: number, percentage: number) {\n  return (percentage / 100) * value;\n}\n\nexport function bisectorAngle(startAngle: number, lengthAngle: number) {\n  return startAngle + lengthAngle / 2;\n}\n\nexport function shiftVectorAlongAngle(angle: number, distance: number) {\n  const angleRadians = degreesToRadians(angle);\n  return {\n    dx: distance * Math.cos(angleRadians),\n    dy: distance * Math.sin(angleRadians),\n  };\n}\n\nexport function isNumber(value: unknown): value is number {\n  return typeof value === 'number';\n}\n\nexport function functionProp<Prop, Payload>(\n  prop: Prop,\n  payload?: Payload\n): Prop extends (...args: any) => any ? ReturnType<Prop> : Prop {\n  return typeof prop === 'function' ? prop(payload) : prop;\n}\n","import { extractPercentage, valueBetween } from '../utils';\nimport type { Data, ExtendedData } from '../commonTypes';\nimport type { PropsWithDefaults as ChartProps } from './Chart';\n\nfunction sumValues(data: Data): number {\n  let sum = 0;\n  for (let i = 0; i < data.length; i++) {\n    sum += data[i].value;\n  }\n  return sum;\n}\n\n// Append \"percentage\", \"degrees\" and \"startAngle\" to each data entry\nexport default function extendData({\n  data,\n  lengthAngle: totalAngle,\n  totalValue,\n  paddingAngle,\n  startAngle: chartStartAngle,\n}: ChartProps): ExtendedData {\n  const total = totalValue || sumValues(data);\n  const normalizedTotalAngle = valueBetween(totalAngle, -360, 360);\n  const numberOfPaddings =\n    Math.abs(normalizedTotalAngle) === 360 ? data.length : data.length - 1;\n  const singlePaddingDegrees = Math.abs(paddingAngle) * Math.sign(totalAngle);\n  const degreesTakenByPadding = singlePaddingDegrees * numberOfPaddings;\n  const degreesTakenByPaths = normalizedTotalAngle - degreesTakenByPadding;\n  let lastSegmentEnd = 0;\n  const extendedData = [];\n\n  // @NOTE: Shall we evaluate percentage accordingly to dataEntry.value's sign?\n  for (let i = 0; i < data.length; i++) {\n    const dataEntry = data[i];\n    const valueInPercentage = total === 0 ? 0 : (dataEntry.value / total) * 100;\n    const degrees = extractPercentage(degreesTakenByPaths, valueInPercentage);\n    const startAngle = lastSegmentEnd + chartStartAngle;\n    lastSegmentEnd = lastSegmentEnd + degrees + singlePaddingDegrees;\n    extendedData.push(\n      Object.assign(\n        {\n          percentage: valueInPercentage,\n          startAngle,\n          degrees,\n        },\n        dataEntry\n      )\n    );\n  }\n  return extendedData;\n}\n","import React from 'react';\nimport type { CSSProperties, SVGProps } from 'react';\nimport type { ExtendedDataEntry } from './commonTypes';\n\nexport type LabelRenderProps = {\n  x: number;\n  y: number;\n  dx: number;\n  dy: number;\n  textAnchor: string;\n  dataEntry: ExtendedDataEntry;\n  dataIndex: number;\n  style?: CSSProperties;\n};\n\ntype Props = SVGProps<SVGTextElement> & LabelRenderProps;\n\nexport default function ReactMinimalPieChartLabel({\n  dataEntry,\n  dataIndex,\n  ...props\n}: Props) {\n  return <text dominantBaseline=\"central\" {...props} />;\n}\n","import React from 'react';\nimport DefaultLabel from '../Label';\nimport {\n  bisectorAngle,\n  extractPercentage,\n  functionProp,\n  shiftVectorAlongAngle,\n} from '../utils';\nimport type { PropsWithDefaults as ChartProps } from './Chart';\nimport type { LabelRenderProps } from '../Label';\nimport type { ExtendedData, LabelRenderFunction } from '../commonTypes';\n\nfunction round(number: number): number {\n  const divisor = 1e14; // 14 decimals\n  return Math.round((number + Number.EPSILON) * divisor) / divisor;\n}\n\nfunction evaluateTextAnchorPosition({\n  labelPosition,\n  lineWidth,\n  labelHorizontalShift,\n}: {\n  labelPosition: number;\n  lineWidth: number;\n  labelHorizontalShift: number;\n}) {\n  const dx = round(labelHorizontalShift);\n  // Label in the vertical center\n  if (dx === 0) {\n    return 'middle';\n  }\n  // Outward label\n  if (labelPosition > 100) {\n    return dx > 0 ? 'start' : 'end';\n  }\n  // Inward label\n  const innerRadius = 100 - lineWidth;\n  if (labelPosition < innerRadius) {\n    return dx > 0 ? 'end' : 'start';\n  }\n  // Overlying label\n  return 'middle';\n}\n\nfunction renderLabelElement(\n  renderLabel: LabelRenderFunction,\n  labelProps: LabelRenderProps\n): JSX.Element | null {\n  const label = renderLabel(labelProps);\n  if (typeof label === 'string' || typeof label === 'number') {\n    return (\n      <DefaultLabel\n        key={`label-${labelProps.dataEntry.key || labelProps.dataIndex}`}\n        {...labelProps}\n      >\n        {label}\n      </DefaultLabel>\n    );\n  }\n\n  if (React.isValidElement(label)) {\n    return label;\n  }\n  return null;\n}\n\nexport default function renderLabels(data: ExtendedData, props: ChartProps) {\n  return data.map((dataEntry, index) => {\n    const segmentsShift = functionProp(props.segmentsShift, index) ?? 0;\n    const distanceFromCenter =\n      extractPercentage(props.radius, props.labelPosition) + segmentsShift;\n    const { dx, dy } = shiftVectorAlongAngle(\n      bisectorAngle(dataEntry.startAngle, dataEntry.degrees),\n      distanceFromCenter\n    );\n\n    // This object is passed as argument to the \"label\" function prop\n    const labelRenderProps = {\n      x: props.center[0],\n      y: props.center[1],\n      dx,\n      dy,\n      textAnchor: evaluateTextAnchorPosition({\n        labelPosition: props.labelPosition,\n        lineWidth: props.lineWidth,\n        labelHorizontalShift: dx,\n      }),\n      dataEntry,\n      dataIndex: index,\n      style: functionProp(props.labelStyle, index),\n    };\n\n    return props.label && renderLabelElement(props.label, labelRenderProps);\n  });\n}\n","'use strict'\n\n// from http://stackoverflow.com/a/18473154\nconst partialCircle = (cx, cy, r, start, end) => {\n\tconst length = end - start\n\tif (length === 0) return []\n\n\tconst fromX = r * Math.cos(start) + cx\n\tconst fromY = r * Math.sin(start) + cy\n\tconst toX = r * Math.cos(end) + cx\n\tconst toY = r * Math.sin(end) + cy\n\tconst large = Math.abs(length) <= Math.PI ? '0' : '1'\n\tconst sweep = length < 0 ? '0' : '1'\n\n\treturn [\n\t\t['M', fromX, fromY],\n\t\t['A', r, r, 0, large, sweep, toX, toY]\n\t]\n}\n\nmodule.exports = partialCircle\n","import React from 'react';\nimport type { SVGProps } from 'react';\nimport partialCircle from 'svg-partial-circle';\nimport {\n  bisectorAngle,\n  degreesToRadians,\n  extractPercentage,\n  isNumber,\n  shiftVectorAlongAngle,\n  valueBetween,\n} from './utils';\n\nexport function makePathCommands(\n  cx: number,\n  cy: number,\n  startAngle: number,\n  lengthAngle: number,\n  radius: number\n): string {\n  const patchedLengthAngle = valueBetween(lengthAngle, -359.999, 359.999);\n\n  return partialCircle(\n    cx,\n    cy, // center X and Y\n    radius,\n    degreesToRadians(startAngle),\n    degreesToRadians(startAngle + patchedLengthAngle)\n  )\n    .map((command) => command.join(' '))\n    .join(' ');\n}\n\ntype Props = SVGProps<SVGPathElement> & {\n  cx: number;\n  cy: number;\n  lengthAngle: number;\n  lineWidth: number;\n  radius: number;\n  reveal?: number;\n  rounded?: boolean;\n  shift?: number;\n  startAngle: number;\n  title?: string | number;\n};\n\nexport default function ReactMinimalPieChartPath({\n  cx,\n  cy,\n  lengthAngle,\n  lineWidth,\n  radius,\n  shift = 0,\n  reveal,\n  rounded,\n  startAngle,\n  title,\n  ...props\n}: Props) {\n  const pathRadius = radius - lineWidth / 2;\n  //@NOTE This shift might be rendered as a translation in future\n  const { dx, dy } = shiftVectorAlongAngle(\n    bisectorAngle(startAngle, lengthAngle),\n    shift\n  );\n\n  const pathCommands = makePathCommands(\n    cx + dx,\n    cy + dy,\n    startAngle,\n    lengthAngle,\n    pathRadius\n  );\n  let strokeDasharray;\n  let strokeDashoffset;\n\n  // Animate/hide paths with \"stroke-dasharray\" + \"stroke-dashoffset\"\n  // https://css-tricks.com/svg-line-animation-works/\n  if (isNumber(reveal)) {\n    const pathLength = degreesToRadians(pathRadius) * lengthAngle;\n    strokeDasharray = Math.abs(pathLength);\n    strokeDashoffset =\n      strokeDasharray - extractPercentage(strokeDasharray, reveal);\n  }\n\n  return (\n    <path\n      d={pathCommands}\n      fill=\"none\"\n      strokeWidth={lineWidth}\n      strokeDasharray={strokeDasharray}\n      strokeDashoffset={strokeDashoffset}\n      strokeLinecap={rounded ? 'round' : undefined}\n      {...props}\n    >\n      {title && <title>{title}</title>}\n    </path>\n  );\n}\n","import React from 'react';\nimport type { CSSProperties } from 'react';\nimport Path from '../Path';\nimport { extractPercentage, functionProp, isNumber } from '../utils';\nimport type { ExtendedData } from '../commonTypes';\nimport type { PropsWithDefaults as ChartProps } from './Chart';\n\nfunction combineSegmentTransitionsStyle(\n  duration: number,\n  easing: string,\n  customStyle?: CSSProperties\n): { transition: string } {\n  // Merge chart's animation CSS transition with \"transition\" found to customStyle\n  let transition = `stroke-dashoffset ${duration}ms ${easing}`;\n  if (customStyle && customStyle.transition) {\n    transition = `${transition},${customStyle.transition}`;\n  }\n  return {\n    transition,\n  };\n}\n\nfunction getRevealValue<Reveal>(props: { reveal?: Reveal; animate?: boolean }) {\n  //@NOTE When animation is on, chart has to be fully revealed when reveal is not set\n  if (props.animate && !isNumber(props.reveal)) {\n    return 100;\n  }\n  return props.reveal;\n}\n\nfunction makeEventHandler<Event, EventHandler, Payload>(\n  eventHandler: undefined | (EventHandler & Function),\n  payload: Payload\n) {\n  return (\n    eventHandler &&\n    ((e: Event) => {\n      eventHandler(e, payload);\n    })\n  );\n}\n\nexport default function renderSegments(\n  data: ExtendedData,\n  props: ChartProps,\n  revealOverride?: null | number\n) {\n  // @NOTE this should go in Path component. Here for performance reasons\n  const reveal = revealOverride ?? getRevealValue(props);\n  const {\n    radius,\n    center: [cx, cy],\n  } = props;\n  const lineWidth = extractPercentage(radius, props.lineWidth);\n  const paths = data.map((dataEntry, index) => {\n    const segmentsStyle = functionProp(props.segmentsStyle, index);\n    return (\n      <Path\n        cx={cx}\n        cy={cy}\n        key={dataEntry.key || index}\n        lengthAngle={dataEntry.degrees}\n        lineWidth={lineWidth}\n        radius={radius}\n        rounded={props.rounded}\n        reveal={reveal}\n        shift={functionProp(props.segmentsShift, index)}\n        startAngle={dataEntry.startAngle}\n        title={dataEntry.title}\n        style={Object.assign(\n          {},\n          segmentsStyle,\n          props.animate &&\n            combineSegmentTransitionsStyle(\n              props.animationDuration,\n              props.animationEasing,\n              segmentsStyle\n            )\n        )}\n        stroke={dataEntry.color}\n        tabIndex={props.segmentsTabIndex}\n        onBlur={makeEventHandler(props.onBlur, index)}\n        onClick={makeEventHandler(props.onClick, index)}\n        onFocus={makeEventHandler(props.onFocus, index)}\n        onKeyDown={makeEventHandler(props.onKeyDown, index)}\n        onMouseOver={makeEventHandler(props.onMouseOver, index)}\n        onMouseOut={makeEventHandler(props.onMouseOut, index)}\n      />\n    );\n  });\n\n  if (props.background) {\n    paths.unshift(\n      <Path\n        cx={cx}\n        cy={cy}\n        key=\"bg\"\n        lengthAngle={props.lengthAngle}\n        lineWidth={lineWidth}\n        radius={radius}\n        rounded={props.rounded}\n        startAngle={props.startAngle}\n        stroke={props.background}\n      />\n    );\n  }\n\n  return paths;\n}\n","import React, { useState, useEffect } from 'react';\nimport type {\n  CSSProperties,\n  FocusEvent,\n  KeyboardEvent,\n  MouseEvent,\n  ReactNode,\n} from 'react';\nimport extendData from './extendData';\nimport renderLabels from './renderLabels';\nimport renderSegments from './renderSegments';\nimport type { Data, EventHandler, LabelRenderFunction } from '../commonTypes';\n\ntype Props = {\n  animate?: boolean;\n  animationDuration?: number;\n  animationEasing?: string;\n  background?: string;\n  center?: [number, number];\n  children?: ReactNode;\n  className?: string;\n  data: Data;\n  lengthAngle?: number;\n  lineWidth?: number;\n  label?: LabelRenderFunction;\n  labelPosition?: number;\n  labelStyle?:\n    | CSSProperties\n    | ((dataIndex: number) => CSSProperties | undefined);\n  onBlur?: EventHandler<FocusEvent>;\n  onClick?: EventHandler<MouseEvent>;\n  onFocus?: EventHandler<FocusEvent>;\n  onKeyDown?: EventHandler<KeyboardEvent>;\n  onMouseOut?: EventHandler<MouseEvent>;\n  onMouseOver?: EventHandler<MouseEvent>;\n  paddingAngle?: number;\n  radius?: number;\n  reveal?: number;\n  rounded?: boolean;\n  segmentsShift?: number | ((dataIndex: number) => number | undefined);\n  segmentsStyle?:\n    | CSSProperties\n    | ((dataIndex: number) => CSSProperties | undefined);\n  segmentsTabIndex?: number;\n  startAngle?: number;\n  style?: CSSProperties;\n  totalValue?: number;\n  viewBoxSize?: [number, number];\n};\n\nconst defaultProps = {\n  animationDuration: 500,\n  animationEasing: 'ease-out',\n  center: [50, 50] as [number, number],\n  data: [] as Data,\n  labelPosition: 50,\n  lengthAngle: 360,\n  lineWidth: 100,\n  paddingAngle: 0,\n  radius: 50,\n  startAngle: 0,\n  viewBoxSize: [100, 100] as [number, number],\n};\n\nexport type PropsWithDefaults = Props & typeof defaultProps;\n\nexport function ReactMinimalPieChart(props: PropsWithDefaults) {\n  const [revealOverride, setRevealOverride] = useState(\n    props.animate ? 0 : null\n  );\n  useEffect(() => {\n    if (props.animate) {\n      return startInitialAnimation();\n    }\n\n    function startInitialAnimation() {\n      let animationTimerId: NodeJS.Timeout | null;\n      let animationRAFId: number | null;\n      animationTimerId = setTimeout(() => {\n        animationTimerId = null;\n        animationRAFId = requestAnimationFrame(() => {\n          animationRAFId = null;\n          setRevealOverride(null); // Start animation\n        });\n      });\n\n      return () => {\n        animationTimerId && clearTimeout(animationTimerId);\n        animationRAFId && cancelAnimationFrame(animationRAFId);\n      };\n    }\n  }, []);\n\n  const extendedData = extendData(props);\n  return (\n    <svg\n      viewBox={`0 0 ${props.viewBoxSize[0]} ${props.viewBoxSize[1]}`}\n      width=\"100%\"\n      height=\"100%\"\n      className={props.className}\n      style={props.style}\n    >\n      {renderSegments(extendedData, props, revealOverride)}\n      {props.label && renderLabels(extendedData, props)}\n      {props.children}\n    </svg>\n  );\n}\n\nReactMinimalPieChart.defaultProps = defaultProps;\n"],"sourceRoot":""}