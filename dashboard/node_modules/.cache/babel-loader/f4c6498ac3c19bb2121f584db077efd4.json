{"ast":null,"code":"var _jsxFileName = \"/home/bernardoabreu/Desktop/wp5-dashboard/dashboard/src/utils/hooks/DynamicRemoteContainer.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState, lazy, Suspense } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useDynamicScript = url => {\n  _s();\n\n  const [ready, setReady] = useState(false);\n  const [failed, setFailed] = useState(false);\n  useEffect(() => {\n    if (!url) return;\n    const element = document.createElement(\"script\");\n    element.src = url;\n    element.type = \"text/javascript\";\n    element.async = true;\n    setReady(false);\n    setFailed(false);\n\n    element.onload = () => {\n      console.log(`Dynamic Script Loaded: ${url}`);\n      setReady(true);\n    };\n\n    element.onerror = () => {\n      console.error(`Dynamic Script Error: ${url}`);\n      setReady(false);\n      setFailed(true);\n    };\n\n    document.head.appendChild(element);\n    return () => {\n      console.log(`Dynamic Script Removed: ${url}`);\n      document.head.removeChild(element);\n    };\n  }, [url]);\n  return {\n    ready,\n    failed\n  };\n};\n\n_s(useDynamicScript, \"cgCmnFs4LO4f1+dqEfelQq09bhU=\");\n\nconst DynamicRemoteContainer = ({\n  url,\n  module: targetModule,\n  scope,\n  ...props\n}) => {\n  _s2();\n\n  const {\n    ready,\n    failed\n  } = useDynamicScript(url);\n  console.log('ready :>> ', ready);\n  if (!ready) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: [\"Loading dynamic script: \", url]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 22\n  }, this);\n  if (failed) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: [\"Failed to load dynamic script: \", url]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 22\n  }, this);\n\n  function loadComponent(scope, module) {\n    return () => {\n      new Promise(resolve => {\n        const moduleResolve = resolve;\n\n        const react = require(\"react\");\n\n        const reactDom = require(\"react-dom\");\n\n        const recoil = require(\"recoil\");\n\n        const emotion = require(\"@emotion/react\");\n\n        const legacyShareScope = {\n          react: {\n            [react.version]: {\n              get: () => new Promise(resolve => resolve(() => react)),\n              loaded: true,\n              from: \"webpack4\"\n            }\n          },\n          \"react-dom\": {\n            [reactDom.version]: {\n              get: () => new Promise(resolve => resolve(() => reactDom)),\n              loaded: true,\n              from: \"webpack4\"\n            }\n          },\n          recoil: {\n            [recoil]: {\n              get: () => new Promise(resolve => resolve(() => recoil)),\n              loaded: true,\n              from: \"webpack4\"\n            }\n          },\n          \"@emotion/react\": {\n            [emotion]: {\n              get: () => new Promise(resolve => resolve(() => emotion)),\n              loaded: true,\n              from: \"webpack4\"\n            }\n          }\n        };\n        new Promise(resolve => resolve(window[scope].init(legacyShareScope))).then(() => window[scope].get(module).then(factory => moduleResolve(factory())));\n      });\n    };\n  }\n\n  const Component = /*#__PURE__*/lazy(loadComponent(scope, module));\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: \"Loading System\",\n    children: /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(DynamicRemoteContainer, \"DD7iWqYvsRB3t/fItKErVD9mgCY=\", false, function () {\n  return [useDynamicScript];\n});\n\n_c = DynamicRemoteContainer;\nexport default DynamicRemoteContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DynamicRemoteContainer\");","map":{"version":3,"sources":["/home/bernardoabreu/Desktop/wp5-dashboard/dashboard/src/utils/hooks/DynamicRemoteContainer.jsx"],"names":["useEffect","useState","lazy","Suspense","useDynamicScript","url","ready","setReady","failed","setFailed","element","document","createElement","src","type","async","onload","console","log","onerror","error","head","appendChild","removeChild","DynamicRemoteContainer","module","targetModule","scope","props","loadComponent","Promise","resolve","moduleResolve","react","require","reactDom","recoil","emotion","legacyShareScope","version","get","loaded","from","window","init","then","factory","Component"],"mappings":"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","sourcesContent":["import { \n  useEffect, \n  useState, \n  lazy, \n  Suspense\n} from \"react\";\n\nconst useDynamicScript = url => {\n  const [ready, setReady] = useState(false);\n  const [failed, setFailed] = useState(false);\n\n  useEffect(() => {\n    if(!url) return;\n\n    const element = document.createElement(\"script\");\n\n    element.src = url;\n    element.type = \"text/javascript\";\n    element.async = true;\n\n    setReady(false);\n    setFailed(false);\n\n    element.onload = () => {\n      console.log(`Dynamic Script Loaded: ${url}`);\n      setReady(true);\n    };\n\n    element.onerror = () => {\n      console.error(`Dynamic Script Error: ${url}`);\n      setReady(false);\n      setFailed(true);\n    };\n\n    document.head.appendChild(element);\n\n    return () => {\n      console.log(`Dynamic Script Removed: ${url}`);\n      document.head.removeChild(element);\n    };\n  }, [url])\n\n  return {\n    ready,\n    failed\n  };\n};\n\nconst DynamicRemoteContainer = ({ \n  url, \n  module: targetModule, \n  scope, \n  ...props \n}) => {\n  \n  const { ready, failed } = useDynamicScript(url);\n\n  console.log('ready :>> ', ready);\n\n  if (!ready) return <h2>Loading dynamic script: {url}</h2>;\n  \n  if (failed) return <h2>Failed to load dynamic script: {url}</h2>;\n\n\n  function loadComponent(scope, module) {\n    return () => {\n      new Promise(resolve => {\n        const moduleResolve = resolve;\n\n        const react = require(\"react\");\n        const reactDom = require(\"react-dom\");\n        const recoil = require(\"recoil\");\n        const emotion = require(\"@emotion/react\");\n\n        const legacyShareScope = {\n          react: {\n            [react.version]: {\n              get: () => new Promise(resolve => resolve(() => react)),\n              loaded: true,\n              from: \"webpack4\",\n            },\n          },\n          \"react-dom\": {\n            [reactDom.version]: {\n              get: () => new Promise(resolve => resolve(() => reactDom)),\n              loaded: true,\n              from: \"webpack4\",\n            },\n          },\n          recoil: {\n            [recoil]: {\n              get: () => new Promise(resolve => resolve(() => recoil)),\n              loaded: true,\n              from: \"webpack4\",\n            },\n          },\n          \"@emotion/react\": {\n            [emotion]: {\n              get: () => new Promise(resolve => resolve(() => emotion)),\n              loaded: true,\n              from: \"webpack4\",\n            },\n          },\n        };\n\n        new Promise(resolve => resolve(window[scope].init(legacyShareScope)))\n        .then(() => window[scope].get(module)\n        .then(factory => moduleResolve(factory())));\n      })\n    }\n  }  \n\n  const Component = lazy(loadComponent(scope, module)\n  );\n\n  return (\n    <Suspense fallback=\"Loading System\">\n      <Component {...props} />\n    </Suspense>\n  )\n}\n\nexport default DynamicRemoteContainer;"]},"metadata":{},"sourceType":"module"}